[{"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/index.js":"1","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/App.js":"2","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/reportWebVitals.js":"3","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/NavBar.js":"4","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/Banner.js":"5","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/Skills.js":"6"},{"size":535,"mtime":1663423493590,"results":"7","hashOfConfig":"8"},{"size":396,"mtime":1663856314347,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1663423493590,"results":"10","hashOfConfig":"8"},{"size":2485,"mtime":1663609514470,"results":"11","hashOfConfig":"8"},{"size":3789,"mtime":1667926690307,"results":"12","hashOfConfig":"13"},{"size":4537,"mtime":1663879335918,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"13h23q2",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"w88usu",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/index.js",[],[],[],"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/App.js",["35"],[],"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/reportWebVitals.js",[],[],"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/NavBar.js",["36","37","38"],[],"import { useState, useEffect} from \"react\";\n//Imports de react components navbar\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport logo from '../assets/img/logo.svg'\nimport navIcon1 from '../assets/img/nav-icon1.svg';\nimport navIcon2 from '../assets/img/nav-icon2.svg';\nimport navIcon3 from '../assets/img/nav-icon3.svg';\n\n\nexport const NavBar = () => {\n    const [activeLink, setActiveLink] = useState('home');\n    const [scrolled, seScrolled] = useState(false);\n\n    useEffect(() => {\n        const onScroll = () => {\n            if (window.scrollY > 50) {\n                seScrolled(true);\n            } else {\n                seScrolled(false);\n            }\n        }\n\n        window.addEventListener('scroll', onScroll);\n\n        return () => window.removeEventListener('scroll', onScroll);\n    },[]) \n\n    const onUpdateActiveLink = (value) => {\n        setActiveLink(value);\n    }\n\n    return (\n    \n    <Navbar expand=\"lg\" className={scrolled ? \"scrolled\": \"\"}>\n        <Container>\n            <Navbar.Brand href=\"#home\">\n                <img src={logo} alt=\"Logo\" />\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </Navbar.Toggle>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\n                    <Nav.Link href=\"#skills\" className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\n                    <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\n                </Nav>\n                <span className=\"navbar-text\">\n                    <div className=\"social-icon\">\n                        <a href=\"#\"><img src={navIcon1} alt=\"\"/></a>\n                        <a href=\"#\"><img src={navIcon2} alt=\"\"/></a>\n                        <a href=\"#\"><img src={navIcon3} alt=\"\"/></a>\n                    </div>\n                    <button className=\"vvd\" onClick={() => console.log('connect')}><span>Let's Connect</span></button>\n                </span>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n    )\n}","/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/Banner.js",["39","40"],[],"/home/fran/Documents/Proyectos/React/PortFolio-React/personal-portfolio/src/components/Skills.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":50,"column":25,"nodeType":"47","endLine":50,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":51,"column":25,"nodeType":"47","endLine":51,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":52,"column":25,"nodeType":"47","endLine":52,"endColumn":37},{"ruleId":"41","severity":1,"message":"48","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":25,"column":8,"nodeType":"51","endLine":25,"endColumn":14,"suggestions":"52"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'headerimg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["53"],{"desc":"54","fix":"55"},"Update the dependencies array to be: [delta, text, tick]",{"range":"56","text":"57"},[843,849],"[delta, text, tick]"]